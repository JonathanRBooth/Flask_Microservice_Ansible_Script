---
- name: Create security group
  ec2_group:
    name: ID_service_group
    description: Security group for ID service webservers
    region: '{{ region }}'
    aws_secret_key: '{{ aws_secret_key }}'
    aws_access_key: '{{ aws_access_key }}'
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: tcp
        from_port: 0
        to_port: 10000
        cidr_ip: 0.0.0.0/0         

- name: Starting EC2 instances (takes a couple of minutes) 
  ec2:
    image: '{{ image }}'
    region: '{{ region }}'
    instance_type: '{{ instance_type }}' 
    key_name: '{{ key_name }}'
    instance_tags: { Name: ID_Service_Server, type: web2, env: production2}
    wait: yes
    group: 'ID_service_group'
    exact_count: 2
    count_tag: { type: web2 }
    aws_secret_key: '{{ aws_secret_key }}'
    aws_access_key: '{{ aws_access_key }}'
  register: ec2

- name: Waiting for SSH server to come online (takes a couple of minutes)
  wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
  with_items: ec2.instances

- name: Create ELB
  local_action:
    module: ec2_elb_lb
    name: "AnsibleELB"
    state: present
    region: "{{ region }}"
    zones: eu-west-1c
    aws_secret_key: '{{ aws_secret_key }}'
    aws_access_key: '{{ aws_access_key }}'
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80

- name: Add instances to hosts list
  add_host: hostname={{ item.public_dns_name }} groups=web2
  with_items: ec2.tagged_instances
  when: item.public_dns_name is defined

